# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from learngrpc.proto import sigmob_jion_pb2 as sigmob__jion__pb2


class RtbStub(object):
  """广告竞价服务接口
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetMobileAd = channel.unary_unary(
        '/Rtb/GetMobileAd',
        request_serializer=sigmob__jion__pb2.SearchLog.SerializeToString,
        response_deserializer=sigmob__jion__pb2.SearchLog.FromString,
        )


class RtbServicer(object):
  """广告竞价服务接口
  """

  def GetMobileAd(self, request, context):
    """获取竞价广告
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RtbServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetMobileAd': grpc.unary_unary_rpc_method_handler(
          servicer.GetMobileAd,
          request_deserializer=sigmob__jion__pb2.SearchLog.FromString,
          response_serializer=sigmob__jion__pb2.SearchLog.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Rtb', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
